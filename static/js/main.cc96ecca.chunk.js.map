{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","className","name","href","email","body","CommentList","comments","map","id","UserInfo","user","PostInfo","post","title","userId","length","PostList","posts","postsFromServer","postFromServer","commentsFromServer","filter","postId","usersFromServer","find","App","ReactDOM","render","document","getElementById"],"mappings":"w38IAEaA,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACzB,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCD,EAAQE,OAE9C,OAED,mBACED,UAAU,qBACVE,KAAI,iBAAYH,EAAQI,OAF1B,SAIGJ,EAAQI,WAIb,qBAAKH,UAAU,oBAAf,SACGD,EAAQK,WCfFC,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKN,UAAU,cAAf,SACGM,EAASC,KAAI,SAAAR,GAAO,OACnB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQS,WCJrCC,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,mBAAGV,UAAU,WAAWE,KAAI,iBAAYQ,EAAKP,OAA7C,SACGO,EAAKT,SCAGU,G,MAAW,SAAC,GAAD,QAAGC,KAGzBC,GAHsB,EACtBL,GADsB,EAEtBM,OAFsB,EAGtBD,OACAT,EAJsB,EAItBA,KACAE,EALsB,EAKtBA,SACAI,EANsB,EAMtBA,KANsB,OAQtB,sBAAKV,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCa,IAEhCH,GACC,8BACG,eAED,cAAC,EAAD,CAAUA,KAAMA,UAKtB,mBAAGV,UAAU,iBAAb,SAA+BI,IAE/B,uBAEqB,IAApBE,EAASS,OACR,mBAAG,UAAQ,oBAAX,6BAEA,cAAC,EAAD,CAAaT,SAAUA,SC7BhBU,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKjB,UAAU,WAAf,SACGiB,EAAMV,KAAI,SAAAK,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKJ,WCChCS,EAAQC,EAAgBX,KAAI,SAAAY,GAAc,kCAC3CA,GAD2C,IAE9Cb,SAAUc,EAAmBC,QAC3B,SAAAtB,GAAO,OAAIA,EAAQuB,SAAWH,EAAeX,MAE/CE,KAAMa,EAAgBC,MAAK,SAAAd,GAAI,OAAIA,EAAKF,KAAOW,EAAeL,eAGnDW,EAAM,kBACjB,0BAASzB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUiB,MAAOA,QCfrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.cc96ecca.chunk.js","sourcesContent":["import './CommentInfo.scss';\n\nexport const CommentInfo = ({ comment }) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">{comment.name}</strong>\n\n      {' by '}\n\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto:${comment.email}`}\n      >\n        {comment.email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">\n      {comment.body}\n    </div>\n  </div>\n);\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.map(comment => (\n      <CommentInfo comment={comment} key={comment.id} />\n    ))}\n  </div>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ post: {\n  id,\n  userId,\n  title,\n  body,\n  comments,\n  user,\n} }) => (\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">{title}</h3>\n\n      {user && (\n        <p>\n          {' Posted by  '}\n\n          <UserInfo user={user} />\n        </p>\n      )}\n    </div>\n\n    <p className=\"PostInfo__body\">{body}</p>\n\n    <hr />\n\n    {comments.length === 0 ? (\n      <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n    ) : (\n      <CommentList comments={comments} />\n    )}\n  </div>\n);\n","import { PostInfo } from '../PostInfo';\nimport './PostList.scss';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo post={post} key={post.id} />\n    ))}\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nconst posts = postsFromServer.map(postFromServer => ({\n  ...postFromServer,\n  comments: commentsFromServer.filter(\n    comment => comment.postId === postFromServer.id,\n  ),\n  user: usersFromServer.find(user => user.id === postFromServer.userId),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}